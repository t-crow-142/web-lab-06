const dbPromise = require("./modules/database");
const SQL = require("sql-template-strings");
const messageDao = require("./modules/message-dao");

async function run() {

    // Example one - db methods
    await exampleOne();

    console.log(); // blank line in console

    // Example two - DAO
    await exampleTwo();
}

async function exampleOne() {
    console.log("Example one - raw sqlite package usage");

    // Wait for the database to finish opening
    const db = await dbPromise;

    // Add some messages to the db
    let result = await db.run("insert into messages(id, content) values(1, 'I am a message!')");
    console.log(`Message added to db (id = 1, number of rows affected = ${result.changes})`);

    result = await db.run("insert into messages(content) values('Hello, world!')");
    console.log(`Message added to db (autogenerated id = ${result.lastID})`);

    result = await db.run("insert into messages(content) values('Goodbye, world!')");
    console.log(`Message added to db (autogenerated id = ${result.lastID})`);


    // Add a message using an SQL template literal
    const content = "Message added using template literal";
    result = await db.run(SQL`insert into messages(content) values(${content})`);
    console.log(`Message added to db (autogenerated id = ${result.lastID})`);


    // Modify a message in the db
    result = await db.run("update messages set content = 'CHANGED message!' where id = 1");
    console.log(`Updated a message (id = 1, number of rows affected = ${result.changes})`);


    // Get all messages in the db
    const allMessages = await db.all("select * from messages");
    console.log(`${allMessages.length} messages obtained from database:`);

    allMessages.forEach(function (message) {
        console.log(`- Message [id = ${message.id}, content = '${message.content}']`);
    })


    // Get a single message in the db
    const messageId = 1;
    const singleMessage = await db.get(SQL`select * from messages where id = ${messageId}`);
    console.log(`Single message retrieved [id = ${singleMessage.id}, content = '${singleMessage.content}']`);


    // Delete all messages!
    result = await db.run("delete from messages");
    console.log(`Messages deleted! (${result.changes} rows affected)`);
}

async function exampleTwo() {
    console.log("Example two - Data Access Object (DAO) pattern");

    // Add some messages to the db
    const message1 = { content: "I am a message!" };
    await messageDao.createMessage(message1);
    console.log(`Message added (autogenerated id = ${message1.id})`);

    const message2 = { content: "Hello, world!" };
    await messageDao.createMessage(message2);
    console.log(`Message added (autogenerated id = ${message2.id})`);

    const message3 = { content: "Goodbye, world!" };
    await messageDao.createMessage(message3);
    console.log(`Message added (autogenerated id = ${message3.id})`);


    // Modify a message in the db
    message1.content = "CHANGED message!";
    await messageDao.updateMessage(message1);
    console.log("Updated message1");


    // Get all messages in the db
    const allMessages = await messageDao.retrieveAllMessages();
    console.log(`${allMessages.length} messages obtained from database:`);
    allMessages.forEach(function (message) {
        console.log(`- Message [id = ${message.id}, content = '${message.content}']`);
    })


    // Get a single message in the db
    const messageId = 1;
    const singleMessage = await messageDao.retrieveMessageById(messageId);
    console.log(`Single message retrieved [id = ${singleMessage.id}, content = '${singleMessage.content}']`);


    // Delete all messages!
    const result = await messageDao.deleteAllMessages();
    console.log(`Messages deleted! (${result.changes} rows affected)`);
}


// Start the program
run();